# Skompilowana aplikacja (build output)
dist/
/dist/
/tmp/
/out-tsc/
/bazel-out/

# Folder z zależnościami Node.js
# Ten folder jest bardzo duży i zależności powinny być instalowane za pomocą `npm install`
/node_modules/

# Pliki logów npm
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Pliki tymczasowe i konfiguracyjne edytorów
.DS_Store
.vscode/

# Pliki generowane przez testy (raporty pokrycia kodu)
/coverage/

# Pliki środowiskowe (powinny zawierać tylko lokalne sekrety)
src/environments/*.local.ts

# WAŻNA UWAGA:
# Plik `package-lock.json` (lub `yarn.lock`) NIE powinien być ignorowany.
# Zapewnia on, że każdy deweloper i system CI instaluje dokładnie te same wersje zależności.
# Dlatego nie ma go na tej liście.

# Node
node_modules/
build/


# Środowiska
.env
*.env.local

# ===================================
# FRONTEND .GITIGNORE - ANGULAR/NODE.js
# ===================================

# ====================
# NODE.JS & NPM
# ====================
# Dependencies
node_modules/
jspm_packages/

# Package lock files (optional - choose one strategy)
package-lock.json
yarn.lock
pnpm-lock.yaml

# npm debug logs
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/
*.lcov

# nyc test coverage
.nyc_output

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional stylelint cache
.stylelintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# ====================
# ANGULAR SPECIFIC
# ====================
# Build outputs
/dist/
/tmp/
/out-tsc/
/bazel-out

# Angular build system
.angular/
.angular/cache/

# Build artifacts
*.js.map
*.d.ts.map

# Angular CLI cache
.angular/

# Webpack build artifacts
webpack-stats.json

# Angular e2e
/e2e/*.js
/e2e/*.map

# ====================
# TYPESCRIPT
# ====================
# TypeScript build info
*.tsbuildinfo

# TypeScript compiled JavaScript files (if not using build tools)
*.js
*.js.map
*.d.ts

# But keep specific config files
!karma.conf.js
!protractor.conf.js
!jest.config.js
!webpack.config.js
!gulpfile.js
!Gruntfile.js

# ====================
# TESTING
# ====================
# Unit test coverage
coverage/
*.lcov

# E2E test artifacts
/cypress/videos/
/cypress/screenshots/
/cypress/downloads/

# Jest
jest_reports/

# Karma
karma_reports/

# Protractor
protractor_reports/

# ====================
# SCSS/CSS
# ====================
# Sass cache
.sass-cache/

# CSS source maps
*.css.map

# PostCSS
.postcssrc.js

# ====================
# IDE FILES (FRONTEND SPECIFIC)
# ====================
# Visual Studio Code
.vscode/
*.code-workspace

# WebStorm/PhpStorm
.idea/
*.iws
*.iml
*.ipr

# Sublime Text
*.sublime-workspace
*.sublime-project

# Atom
.atom/

# ====================
# OPERATING SYSTEM
# ====================
# macOS
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Windows
Thumbs.db
ehthumbs.db
[Dd]esktop.ini
$RECYCLE.BIN/
*.lnk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*

# ====================
# LOGS
# ====================
# Log files
*.log
logs/
log/

# Debug logs
debug.log
error.log

# ====================
# ENVIRONMENT & CONFIG
# ====================
# Environment configuration
.env
.env.local
.env.*.local
.environment.ts
environment.*.ts

# Configuration files
.firebaserc
firebase-debug.log
.firebase/

# PWA
sw.js
workbox-*.js

# ====================
# DEPLOYMENT & BUILD TOOLS
# ====================
# Build outputs
build/
dist/
public/build/

# Storybook build outputs
storybook-static/

# ====================
# PACKAGE MANAGERS
# ====================
# Yarn
.yarn/cache
.yarn/unplugged
.yarn/build-state.yml
.yarn/install-state.gz
.pnp.*

# pnpm
.pnpm-debug.log*
.pnpm-store/

# Rush
.rush/

# ====================
# LINTING & FORMATTING
# ====================
# ESLint
.eslintcache

# Prettier
.prettierignore

# StyleLint
.stylelintcache

# ====================
# MONITORING & ANALYTICS
# ====================
# Sentry
.sentryclirc

# Bundle analyzer
bundle-analyzer-report.html
stats.json

# ====================
# TEMPORARY & CACHE
# ====================
# Temporary folders
tmp/
temp/

# Cache directories
.cache/
.temp/

# Editor directories and files
.vscode/*
!.vscode/extensions.json
.idea
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?

# ====================
# DOCUMENTATION
# ====================
# Generated documentation
docs/generated/
typedoc/
compodoc/

# ====================
# MISC
# ====================
# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional stylelint cache
.stylelintcache

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# ====================
# ANGULAR UNIVERSAL
# ====================
# Prerendered routes (Angular Universal)
dist-prerender/

# Server-side rendering
ssr-dist/